/*
 * Created on 2018-10-10 ( Date ISO 2018-10-10 - Time 14:03:17 )
 * Generated by Telosys ( http://www.telosys.org/ ) version 3.0.0
*/
package com.example.demo.service;


import java.util.List; 

import javax.transaction.Transactional;

import com.example.demo.entity.FlightSchedules;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.example.demo.repository.FlightSchedulesRepository;

import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

@Service
@Transactional
public class FlightSchedulesServiceImpl implements FlightSchedulesService {

	@Autowired
	private FlightSchedulesRepository flightSchedulesRepository;

	@Override
	public FlightSchedules getOne(Integer flightNumber) {
		return flightSchedulesRepository.findById(flightNumber).get();
	}

	@Override
	public Boolean delete(Integer flightNumber) {
		if (flightSchedulesRepository.getOne(flightNumber) != null) {
			flightSchedulesRepository.deleteById(flightNumber);
			return true;
		}
		return false;
	}

	@Override
	public FlightSchedules create(FlightSchedules flightSchedules) {
		return flightSchedulesRepository.save(flightSchedules);
	}

	@Override
	public FlightSchedules update(FlightSchedules flightSchedulesToUpdate) {
						FlightSchedules flightSchedules = flightSchedulesRepository.getOne(flightSchedulesToUpdate.getFlightNumber());
																														
//				if(flightSchedulesToUpdate.getAirlineCode() !=null) {
//			
//		}
//				if(flightSchedulesToUpdate.getUsualAircraftTypeCode() !=null) {
//			
//		}
//				if(flightSchedulesToUpdate.getOriginAirportCode() !=null) {
//			
//		}
//				if(flightSchedulesToUpdate.getDestinationAirportCode() !=null) {
//			
//		}
				if(flightSchedulesToUpdate.getDepartureTime() !=null) {
			
		}
				if(flightSchedulesToUpdate.getArrvialTime() !=null) {
			
		}
				return flightSchedulesRepository.save(flightSchedules);
	}

	@Override
	public Boolean exist(FlightSchedules flightSchedules) {
						return flightSchedulesRepository.existsById(flightSchedules.getFlightNumber());
																													}

	@Override
	public List<FlightSchedules> findAll() {
		return flightSchedulesRepository.findAll();
	}

	@Override
	public Page<FlightSchedules> findAll(Pageable pageable) {
		return flightSchedulesRepository.findAll(pageable);
	}
}





