/*
 * Created on 2018-10-10 ( Date ISO 2018-10-10 - Time 14:03:17 )
 * Generated by Telosys ( http://www.telosys.org/ ) version 3.0.0
*/
package com.example.demo.service;


import java.util.List; 

import javax.transaction.Transactional;

import com.example.demo.entity.FlightCosts;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.example.demo.repository.FlightCostsRepository;

import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

@Service
@Transactional
public class FlightCostsServiceImpl implements FlightCostsService {

	@Autowired
	private FlightCostsRepository flightCostsRepository;

	@Override
	public FlightCosts getOne(Integer flightNumber) {
		return flightCostsRepository.findById(flightNumber).get();
	}

	@Override
	public Boolean delete(Integer flightNumber) {
		if (flightCostsRepository.getOne(flightNumber) != null) {
			flightCostsRepository.deleteById(flightNumber);
			return true;
		}
		return false;
	}

	@Override
	public FlightCosts create(FlightCosts flightCosts) {
		return flightCostsRepository.save(flightCosts);
	}

	@Override
	public FlightCosts update(FlightCosts flightCostsToUpdate) {
						FlightCosts flightCosts = flightCostsRepository.getOne(flightCostsToUpdate.getFlightNumber());
																						
//				if(flightCostsToUpdate.getAircraftTypeCode() !=null) {
//			
//		}
//				if(flightCostsToUpdate.getValidFromDate() !=null) {
//			
//		}
//				if(flightCostsToUpdate.getValidToDate() !=null) {
//			
//		}
//				if(flightCostsToUpdate.getFlightCost() !=null) {
//			
//		}
				return flightCostsRepository.save(flightCosts);
	}

	@Override
	public Boolean exist(FlightCosts flightCosts) {
						return flightCostsRepository.existsById(flightCosts.getFlightNumber());
																					}

	@Override
	public List<FlightCosts> findAll() {
		return flightCostsRepository.findAll();
	}

	@Override
	public Page<FlightCosts> findAll(Pageable pageable) {
		return flightCostsRepository.findAll(pageable);
	}
}





